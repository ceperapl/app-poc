package gormmodels

import (
	"fmt"
	"time"

	"github.com/ceperapl/app-poc/pkg/models"
)

// GormTask is a GORM structure for task
type GormTask struct {
	ID          string `gorm:"type:uuid;primary_key"`
	Description string
	Deadline    time.Time
	Completed   bool
	CreatedAt   time.Time
	UpdatedAt   time.Time
}

func (t GormTask) String() string {
	return fmt.Sprintf("Id: %s, Description: %s", t.ID, t.Description)
}

// TableName overrides the default tablename generated by GORM
func (GormTask) TableName() string {
	return "tasks"
}

// ToTask translates from GORM struct to domain task
func (t *GormTask) ToTask() models.Task {
	task := models.Task{
		ID:          t.ID,
		Description: t.Description,
		Deadline:    t.Deadline,
		Completed:   t.Completed,
		CreatedAt:   t.CreatedAt,
		UpdatedAt:   t.UpdatedAt,
	}
	return task
}

// ToGormTask translates from domain task struct to GORM struct
func ToGormTask(task *models.Task) GormTask {
	taskORM := GormTask{
		ID:          task.ID,
		Description: task.Description,
		Deadline:    task.Deadline,
		Completed:   task.Completed,
		CreatedAt:   task.CreatedAt,
		UpdatedAt:   task.UpdatedAt,
	}

	return taskORM
}
