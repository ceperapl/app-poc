// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recipes.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Recipe struct {
	Id          string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Ingredients []*Ingredient               `protobuf:"bytes,3,rep,name=ingredients" json:"ingredients,omitempty"`
	Steps       []string                    `protobuf:"bytes,4,rep,name=steps" json:"steps,omitempty"`
	CreatedAt   *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt   *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=updatedAt" json:"updatedAt,omitempty"`
}

func (m *Recipe) Reset()                    { *m = Recipe{} }
func (m *Recipe) String() string            { return proto.CompactTextString(m) }
func (*Recipe) ProtoMessage()               {}
func (*Recipe) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Recipe) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Recipe) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Recipe) GetIngredients() []*Ingredient {
	if m != nil {
		return m.Ingredients
	}
	return nil
}

func (m *Recipe) GetSteps() []string {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *Recipe) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Recipe) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Ingredient struct {
	Name        string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Amount      float32 `protobuf:"fixed32,2,opt,name=amount" json:"amount,omitempty"`
	Measurement string  `protobuf:"bytes,3,opt,name=measurement" json:"measurement,omitempty"`
}

func (m *Ingredient) Reset()                    { *m = Ingredient{} }
func (m *Ingredient) String() string            { return proto.CompactTextString(m) }
func (*Ingredient) ProtoMessage()               {}
func (*Ingredient) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Ingredient) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Ingredient) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Ingredient) GetMeasurement() string {
	if m != nil {
		return m.Measurement
	}
	return ""
}

type GetRecipeRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetRecipeRequest) Reset()                    { *m = GetRecipeRequest{} }
func (m *GetRecipeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRecipeRequest) ProtoMessage()               {}
func (*GetRecipeRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetRecipeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListRecipesRequest struct {
	FilterBy string `protobuf:"bytes,1,opt,name=filter_by,json=filterBy" json:"filter_by,omitempty"`
	SortBy   string `protobuf:"bytes,2,opt,name=sort_by,json=sortBy" json:"sort_by,omitempty"`
	Limit    int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Page     int32  `protobuf:"varint,4,opt,name=page" json:"page,omitempty"`
}

func (m *ListRecipesRequest) Reset()                    { *m = ListRecipesRequest{} }
func (m *ListRecipesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRecipesRequest) ProtoMessage()               {}
func (*ListRecipesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ListRecipesRequest) GetFilterBy() string {
	if m != nil {
		return m.FilterBy
	}
	return ""
}

func (m *ListRecipesRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *ListRecipesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRecipesRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ListRecipesResponse struct {
	Result []*Recipe `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
	Count  int32     `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ListRecipesResponse) Reset()                    { *m = ListRecipesResponse{} }
func (m *ListRecipesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListRecipesResponse) ProtoMessage()               {}
func (*ListRecipesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ListRecipesResponse) GetResult() []*Recipe {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ListRecipesResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteRecipeRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRecipeRequest) Reset()                    { *m = DeleteRecipeRequest{} }
func (m *DeleteRecipeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRecipeRequest) ProtoMessage()               {}
func (*DeleteRecipeRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *DeleteRecipeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Recipe)(nil), "recipes.v1.Recipe")
	proto.RegisterType((*Ingredient)(nil), "recipes.v1.Ingredient")
	proto.RegisterType((*GetRecipeRequest)(nil), "recipes.v1.GetRecipeRequest")
	proto.RegisterType((*ListRecipesRequest)(nil), "recipes.v1.ListRecipesRequest")
	proto.RegisterType((*ListRecipesResponse)(nil), "recipes.v1.ListRecipesResponse")
	proto.RegisterType((*DeleteRecipeRequest)(nil), "recipes.v1.DeleteRecipeRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Recipes service

type RecipesClient interface {
	CreateRecipe(ctx context.Context, in *Recipe, opts ...grpc.CallOption) (*Recipe, error)
	GetRecipe(ctx context.Context, in *GetRecipeRequest, opts ...grpc.CallOption) (*Recipe, error)
	ListRecipes(ctx context.Context, in *ListRecipesRequest, opts ...grpc.CallOption) (*ListRecipesResponse, error)
	UpdateRecipe(ctx context.Context, in *Recipe, opts ...grpc.CallOption) (*Recipe, error)
	DeleteRecipe(ctx context.Context, in *DeleteRecipeRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type recipesClient struct {
	cc *grpc.ClientConn
}

func NewRecipesClient(cc *grpc.ClientConn) RecipesClient {
	return &recipesClient{cc}
}

func (c *recipesClient) CreateRecipe(ctx context.Context, in *Recipe, opts ...grpc.CallOption) (*Recipe, error) {
	out := new(Recipe)
	err := grpc.Invoke(ctx, "/recipes.v1.Recipes/CreateRecipe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipesClient) GetRecipe(ctx context.Context, in *GetRecipeRequest, opts ...grpc.CallOption) (*Recipe, error) {
	out := new(Recipe)
	err := grpc.Invoke(ctx, "/recipes.v1.Recipes/GetRecipe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipesClient) ListRecipes(ctx context.Context, in *ListRecipesRequest, opts ...grpc.CallOption) (*ListRecipesResponse, error) {
	out := new(ListRecipesResponse)
	err := grpc.Invoke(ctx, "/recipes.v1.Recipes/ListRecipes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipesClient) UpdateRecipe(ctx context.Context, in *Recipe, opts ...grpc.CallOption) (*Recipe, error) {
	out := new(Recipe)
	err := grpc.Invoke(ctx, "/recipes.v1.Recipes/UpdateRecipe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipesClient) DeleteRecipe(ctx context.Context, in *DeleteRecipeRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/recipes.v1.Recipes/DeleteRecipe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Recipes service

type RecipesServer interface {
	CreateRecipe(context.Context, *Recipe) (*Recipe, error)
	GetRecipe(context.Context, *GetRecipeRequest) (*Recipe, error)
	ListRecipes(context.Context, *ListRecipesRequest) (*ListRecipesResponse, error)
	UpdateRecipe(context.Context, *Recipe) (*Recipe, error)
	DeleteRecipe(context.Context, *DeleteRecipeRequest) (*google_protobuf2.Empty, error)
}

func RegisterRecipesServer(s *grpc.Server, srv RecipesServer) {
	s.RegisterService(&_Recipes_serviceDesc, srv)
}

func _Recipes_CreateRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Recipe)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipesServer).CreateRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipes.v1.Recipes/CreateRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipesServer).CreateRecipe(ctx, req.(*Recipe))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recipes_GetRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipesServer).GetRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipes.v1.Recipes/GetRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipesServer).GetRecipe(ctx, req.(*GetRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recipes_ListRecipes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRecipesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipesServer).ListRecipes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipes.v1.Recipes/ListRecipes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipesServer).ListRecipes(ctx, req.(*ListRecipesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recipes_UpdateRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Recipe)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipesServer).UpdateRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipes.v1.Recipes/UpdateRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipesServer).UpdateRecipe(ctx, req.(*Recipe))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recipes_DeleteRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipesServer).DeleteRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipes.v1.Recipes/DeleteRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipesServer).DeleteRecipe(ctx, req.(*DeleteRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Recipes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recipes.v1.Recipes",
	HandlerType: (*RecipesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRecipe",
			Handler:    _Recipes_CreateRecipe_Handler,
		},
		{
			MethodName: "GetRecipe",
			Handler:    _Recipes_GetRecipe_Handler,
		},
		{
			MethodName: "ListRecipes",
			Handler:    _Recipes_ListRecipes_Handler,
		},
		{
			MethodName: "UpdateRecipe",
			Handler:    _Recipes_UpdateRecipe_Handler,
		},
		{
			MethodName: "DeleteRecipe",
			Handler:    _Recipes_DeleteRecipe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recipes.proto",
}

func init() { proto.RegisterFile("recipes.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x8a, 0xd3, 0x50,
	0x14, 0x26, 0x69, 0x9b, 0xb1, 0xa7, 0xf5, 0xef, 0x4c, 0xe9, 0xc4, 0x4c, 0xb1, 0x25, 0x20, 0x94,
	0x2e, 0x52, 0xa6, 0x6e, 0x06, 0x77, 0x56, 0x45, 0x04, 0x57, 0x41, 0x19, 0x18, 0x17, 0x92, 0x36,
	0x67, 0xca, 0x85, 0x26, 0xb9, 0xe6, 0xde, 0x0c, 0x14, 0x71, 0xe3, 0x2b, 0xf8, 0x68, 0x3e, 0x82,
	0x3e, 0x80, 0x8f, 0x20, 0xb9, 0xf7, 0xb6, 0xcd, 0x74, 0xa2, 0xe2, 0x2e, 0xe7, 0x9c, 0xef, 0xfc,
	0x7c, 0xdf, 0x97, 0x04, 0xee, 0xe6, 0xb4, 0x64, 0x9c, 0x44, 0xc0, 0xf3, 0x4c, 0x66, 0x08, 0xdb,
	0xf0, 0xfa, 0xcc, 0x1b, 0xac, 0xb2, 0x6c, 0xb5, 0xa6, 0x69, 0xc4, 0xd9, 0x34, 0x4a, 0xd3, 0x4c,
	0x46, 0x92, 0x65, 0xa9, 0x41, 0x7a, 0x43, 0x53, 0x55, 0xd1, 0xa2, 0xb8, 0x9a, 0x4a, 0x96, 0x90,
	0x90, 0x51, 0xc2, 0x0d, 0xe0, 0xf4, 0x10, 0x40, 0x09, 0x97, 0x1b, 0x5d, 0xf4, 0x7f, 0x59, 0xe0,
	0x84, 0x6a, 0x15, 0xde, 0x03, 0x9b, 0xc5, 0xae, 0x35, 0xb2, 0xc6, 0xed, 0xd0, 0x66, 0x31, 0x22,
	0x34, 0xd3, 0x28, 0x21, 0xd7, 0x56, 0x19, 0xf5, 0x8c, 0xe7, 0xd0, 0x61, 0xe9, 0x2a, 0xa7, 0x98,
	0x51, 0x2a, 0x85, 0xdb, 0x18, 0x35, 0xc6, 0x9d, 0x59, 0x3f, 0xd8, 0x1f, 0x1b, 0xbc, 0xd9, 0x95,
	0xc3, 0x2a, 0x14, 0x7b, 0xd0, 0x12, 0x92, 0xb8, 0x70, 0x9b, 0xa3, 0xc6, 0xb8, 0x1d, 0xea, 0x00,
	0xcf, 0xa1, 0xbd, 0xcc, 0x29, 0x92, 0x14, 0x3f, 0x97, 0x6e, 0x6b, 0x64, 0x8d, 0x3b, 0x33, 0x2f,
	0xd0, 0xf7, 0x06, 0xdb, 0x7b, 0x83, 0x77, 0x5b, 0x42, 0xe1, 0x1e, 0x5c, 0x76, 0x16, 0x3c, 0x36,
	0x9d, 0xce, 0xbf, 0x3b, 0x77, 0x60, 0xff, 0x12, 0x60, 0x7f, 0xe4, 0x8e, 0xa5, 0x55, 0x61, 0xd9,
	0x07, 0x27, 0x4a, 0xb2, 0x22, 0x95, 0x8a, 0xbb, 0x1d, 0x9a, 0x08, 0x47, 0xd0, 0x49, 0x28, 0x12,
	0x45, 0x4e, 0x09, 0xa5, 0xd2, 0x6d, 0xa8, 0x96, 0x6a, 0xca, 0xf7, 0xe1, 0xc1, 0x6b, 0x92, 0x5a,
	0xd0, 0x90, 0x3e, 0x15, 0x24, 0xe4, 0xa1, 0xae, 0xbe, 0x04, 0x7c, 0xcb, 0x84, 0x01, 0x89, 0x2d,
	0xea, 0x14, 0xda, 0x57, 0x6c, 0x2d, 0x29, 0xff, 0xb8, 0xd8, 0x18, 0xf0, 0x1d, 0x9d, 0x98, 0x6f,
	0xf0, 0x04, 0x8e, 0x44, 0x96, 0xcb, 0xb2, 0xa4, 0xdd, 0x70, 0xca, 0x70, 0xbe, 0x29, 0x55, 0x5d,
	0xb3, 0x84, 0xe9, 0x5b, 0x5a, 0xa1, 0x0e, 0x4a, 0x4e, 0x3c, 0x5a, 0x91, 0xdb, 0x54, 0x49, 0xf5,
	0xec, 0x5f, 0xc0, 0xf1, 0x8d, 0xad, 0x82, 0x67, 0xa9, 0x20, 0x9c, 0x80, 0x93, 0x93, 0x28, 0xd6,
	0xd2, 0xb5, 0x94, 0x97, 0x58, 0xf5, 0xd2, 0xf0, 0x30, 0x88, 0x72, 0xd9, 0x72, 0xa7, 0x4a, 0x2b,
	0xd4, 0x81, 0xff, 0x04, 0x8e, 0x5f, 0xd2, 0x9a, 0x24, 0xfd, 0x95, 0xf5, 0xec, 0x47, 0x03, 0x8e,
	0xcc, 0x72, 0x0c, 0xa1, 0xfb, 0x42, 0x19, 0x69, 0xde, 0xbc, 0x9a, 0xa5, 0x5e, 0x4d, 0xce, 0xf7,
	0xbe, 0x7e, 0xff, 0xf9, 0xcd, 0xee, 0xf9, 0xf7, 0xd5, 0xa7, 0x70, 0x7d, 0x36, 0x35, 0x90, 0x67,
	0xd6, 0x04, 0x3f, 0x40, 0x7b, 0xa7, 0x3c, 0x0e, 0xaa, 0xcd, 0x87, 0x86, 0xd4, 0x8e, 0x1e, 0xa8,
	0xd1, 0x7d, 0xec, 0x1d, 0x8c, 0x9e, 0x7e, 0x66, 0xf1, 0x17, 0x5c, 0x41, 0xa7, 0x22, 0x1e, 0x3e,
	0xae, 0x0e, 0xb8, 0xed, 0xa5, 0x37, 0xfc, 0x63, 0x5d, 0xab, 0xee, 0x9f, 0xa8, 0x6d, 0x0f, 0xf1,
	0x90, 0x08, 0x5e, 0x40, 0xf7, 0xbd, 0x7a, 0x51, 0xff, 0x53, 0x99, 0xa1, 0x1a, 0xf8, 0x68, 0x56,
	0x7b, 0x7e, 0x29, 0x0f, 0x41, 0xb7, 0xea, 0x12, 0xde, 0x38, 0xb1, 0xc6, 0x3f, 0xaf, 0x7f, 0xeb,
	0x63, 0x7a, 0x55, 0xfe, 0x36, 0xb6, 0x42, 0x4d, 0x6a, 0x37, 0xcd, 0x9b, 0x97, 0x36, 0x5f, 0x2c,
	0x1c, 0xd5, 0xf3, 0xf4, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x81, 0xb0, 0xbd, 0xd4, 0x04,
	0x00, 0x00,
}
