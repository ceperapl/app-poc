// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tasks.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	tasks.proto

It has these top-level messages:
	Task
	GetTaskRequest
	ListTasksRequest
	ListTasksResponse
	DeleteTaskRequest
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	Id          string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Description string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Deadline    *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=deadline" json:"deadline,omitempty"`
	Completed   bool                        `protobuf:"varint,4,opt,name=completed" json:"completed,omitempty"`
	CreatedAt   *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt   *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=updatedAt" json:"updatedAt,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetDeadline() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *Task) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

func (m *Task) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Task) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GetTaskRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetTaskRequest) Reset()                    { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()               {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetTaskRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListTasksRequest struct {
	FilterBy string `protobuf:"bytes,1,opt,name=filter_by,json=filterBy" json:"filter_by,omitempty"`
	SortBy   string `protobuf:"bytes,2,opt,name=sort_by,json=sortBy" json:"sort_by,omitempty"`
	Limit    int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Page     int32  `protobuf:"varint,4,opt,name=page" json:"page,omitempty"`
}

func (m *ListTasksRequest) Reset()                    { *m = ListTasksRequest{} }
func (m *ListTasksRequest) String() string            { return proto.CompactTextString(m) }
func (*ListTasksRequest) ProtoMessage()               {}
func (*ListTasksRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListTasksRequest) GetFilterBy() string {
	if m != nil {
		return m.FilterBy
	}
	return ""
}

func (m *ListTasksRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *ListTasksRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListTasksRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ListTasksResponse struct {
	Result []*Task `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
	Count  int32   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *ListTasksResponse) Reset()                    { *m = ListTasksResponse{} }
func (m *ListTasksResponse) String() string            { return proto.CompactTextString(m) }
func (*ListTasksResponse) ProtoMessage()               {}
func (*ListTasksResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListTasksResponse) GetResult() []*Task {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ListTasksResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteTaskRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteTaskRequest) Reset()                    { *m = DeleteTaskRequest{} }
func (m *DeleteTaskRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTaskRequest) ProtoMessage()               {}
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeleteTaskRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "tasks.v1.Task")
	proto.RegisterType((*GetTaskRequest)(nil), "tasks.v1.GetTaskRequest")
	proto.RegisterType((*ListTasksRequest)(nil), "tasks.v1.ListTasksRequest")
	proto.RegisterType((*ListTasksResponse)(nil), "tasks.v1.ListTasksResponse")
	proto.RegisterType((*DeleteTaskRequest)(nil), "tasks.v1.DeleteTaskRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Tasks service

type TasksClient interface {
	CreateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Task, error)
	GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Task, error)
	ListTasks(ctx context.Context, in *ListTasksRequest, opts ...grpc.CallOption) (*ListTasksResponse, error)
	UpdateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Task, error)
	DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type tasksClient struct {
	cc *grpc.ClientConn
}

func NewTasksClient(cc *grpc.ClientConn) TasksClient {
	return &tasksClient{cc}
}

func (c *tasksClient) CreateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := grpc.Invoke(ctx, "/tasks.v1.Tasks/CreateTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := grpc.Invoke(ctx, "/tasks.v1.Tasks/GetTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) ListTasks(ctx context.Context, in *ListTasksRequest, opts ...grpc.CallOption) (*ListTasksResponse, error) {
	out := new(ListTasksResponse)
	err := grpc.Invoke(ctx, "/tasks.v1.Tasks/ListTasks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) UpdateTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := grpc.Invoke(ctx, "/tasks.v1.Tasks/UpdateTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) DeleteTask(ctx context.Context, in *DeleteTaskRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/tasks.v1.Tasks/DeleteTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Tasks service

type TasksServer interface {
	CreateTask(context.Context, *Task) (*Task, error)
	GetTask(context.Context, *GetTaskRequest) (*Task, error)
	ListTasks(context.Context, *ListTasksRequest) (*ListTasksResponse, error)
	UpdateTask(context.Context, *Task) (*Task, error)
	DeleteTask(context.Context, *DeleteTaskRequest) (*google_protobuf2.Empty, error)
}

func RegisterTasksServer(s *grpc.Server, srv TasksServer) {
	s.RegisterService(&_Tasks_serviceDesc, srv)
}

func _Tasks_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tasks.v1.Tasks/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).CreateTask(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tasks.v1.Tasks/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).GetTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_ListTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).ListTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tasks.v1.Tasks/ListTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).ListTasks(ctx, req.(*ListTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tasks.v1.Tasks/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).UpdateTask(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tasks.v1.Tasks/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).DeleteTask(ctx, req.(*DeleteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tasks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tasks.v1.Tasks",
	HandlerType: (*TasksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _Tasks_CreateTask_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _Tasks_GetTask_Handler,
		},
		{
			MethodName: "ListTasks",
			Handler:    _Tasks_ListTasks_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _Tasks_UpdateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _Tasks_DeleteTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tasks.proto",
}

func init() { proto.RegisterFile("tasks.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0xc7, 0x49, 0xda, 0x74, 0x9b, 0x53, 0xac, 0xee, 0x61, 0x75, 0x43, 0xba, 0x62, 0x88, 0x20,
	0x65, 0x2f, 0x12, 0xb6, 0x82, 0x88, 0x77, 0xd6, 0xaf, 0x0b, 0x05, 0x31, 0xac, 0x37, 0x8a, 0x48,
	0xda, 0xcc, 0x96, 0x61, 0x93, 0xcc, 0x98, 0x99, 0x2c, 0x14, 0xf1, 0x66, 0x5f, 0xc1, 0xa7, 0xf0,
	0x79, 0x7c, 0x05, 0x1f, 0x44, 0x32, 0x93, 0x34, 0xfd, 0xc2, 0xf5, 0x2e, 0x67, 0xce, 0xff, 0x9c,
	0xff, 0x99, 0xdf, 0x9c, 0xc0, 0x40, 0xc6, 0xe2, 0x52, 0x04, 0xbc, 0x60, 0x92, 0x61, 0x5f, 0x07,
	0x57, 0x67, 0xee, 0xc9, 0x82, 0xb1, 0x45, 0x4a, 0xc2, 0x98, 0xd3, 0x30, 0xce, 0x73, 0x26, 0x63,
	0x49, 0x59, 0x5e, 0xeb, 0xdc, 0x07, 0x75, 0x56, 0x45, 0xb3, 0xf2, 0x22, 0x94, 0x34, 0x23, 0x42,
	0xc6, 0x19, 0xaf, 0x05, 0xa3, 0x6d, 0x01, 0xc9, 0xb8, 0x5c, 0xea, 0xa4, 0x7f, 0x6d, 0x42, 0xf7,
	0x3c, 0x16, 0x97, 0x38, 0x04, 0x93, 0x26, 0x8e, 0xe1, 0x19, 0x63, 0x3b, 0x32, 0x69, 0x82, 0x1e,
	0x0c, 0x12, 0x22, 0xe6, 0x05, 0xe5, 0x95, 0x99, 0x63, 0xaa, 0xc4, 0xfa, 0x11, 0x3e, 0x81, 0x7e,
	0x42, 0xe2, 0x24, 0xa5, 0x39, 0x71, 0x3a, 0x9e, 0x31, 0x1e, 0x4c, 0xdc, 0x40, 0x5b, 0x05, 0x8d,
	0x55, 0x70, 0xde, 0xcc, 0x12, 0xad, 0xb4, 0x78, 0x02, 0xf6, 0x9c, 0x65, 0x3c, 0x25, 0x92, 0x24,
	0x4e, 0xd7, 0x33, 0xc6, 0xfd, 0xa8, 0x3d, 0xc0, 0xa7, 0x60, 0xcf, 0x0b, 0x12, 0x4b, 0x92, 0x3c,
	0x97, 0x8e, 0x75, 0x63, 0xdb, 0x56, 0x5c, 0x55, 0x96, 0x3c, 0xa9, 0x2b, 0x7b, 0x37, 0x57, 0xae,
	0xc4, 0xbe, 0x07, 0xc3, 0x37, 0x44, 0x56, 0x18, 0x22, 0xf2, 0xad, 0x24, 0x42, 0x6e, 0xd3, 0xf0,
	0x0b, 0xb8, 0xf3, 0x8e, 0x0a, 0x25, 0x11, 0x8d, 0x66, 0x04, 0xf6, 0x05, 0x4d, 0x25, 0x29, 0xbe,
	0xce, 0x96, 0xb5, 0xb4, 0xaf, 0x0f, 0xa6, 0x4b, 0x3c, 0x86, 0x03, 0xc1, 0x0a, 0x59, 0xa5, 0x34,
	0xba, 0x5e, 0x15, 0x4e, 0x97, 0x78, 0x04, 0x56, 0x4a, 0x33, 0x2a, 0x15, 0x32, 0x2b, 0xd2, 0x01,
	0x22, 0x74, 0x79, 0xbc, 0x20, 0x0a, 0x87, 0x15, 0xa9, 0x6f, 0xff, 0x03, 0x1c, 0xae, 0x79, 0x0a,
	0xce, 0x72, 0x41, 0xf0, 0x11, 0xf4, 0x0a, 0x22, 0xca, 0x54, 0x3a, 0x86, 0xd7, 0x19, 0x0f, 0x26,
	0xc3, 0xa0, 0x59, 0x93, 0x40, 0xcd, 0x5f, 0x67, 0x2b, 0x9b, 0x39, 0x2b, 0x73, 0xa9, 0xdc, 0xad,
	0x48, 0x07, 0xfe, 0x43, 0x38, 0x7c, 0x49, 0x2a, 0xce, 0xff, 0xb8, 0xeb, 0xe4, 0x57, 0x07, 0x2c,
	0x65, 0x8a, 0xaf, 0x01, 0x5e, 0x28, 0xbc, 0x7a, 0x43, 0x36, 0xad, 0xdc, 0xad, 0xd8, 0x77, 0xae,
	0x7f, 0xff, 0xf9, 0x69, 0xa2, 0x7f, 0x4b, 0x2d, 0xea, 0xd5, 0x59, 0xa8, 0xd2, 0xcf, 0x8c, 0x53,
	0x7c, 0x0f, 0x07, 0x35, 0x5f, 0x74, 0xda, 0xa2, 0x4d, 0xe4, 0x3b, 0xed, 0x5c, 0xd5, 0xee, 0x08,
	0x71, 0xa3, 0x5d, 0xf8, 0x9d, 0x26, 0x3f, 0xf0, 0x33, 0xd8, 0x2b, 0x34, 0xe8, 0xb6, 0x85, 0xdb,
	0x6f, 0xe4, 0x8e, 0xf6, 0xe6, 0x34, 0x4b, 0xff, 0xae, 0x72, 0xb8, 0x8d, 0x9b, 0x03, 0xe3, 0x5b,
	0x80, 0x8f, 0x6a, 0x35, 0xfe, 0xeb, 0xd6, 0xf7, 0x55, 0x93, 0xe3, 0xc9, 0x9e, 0x31, 0xab, 0xab,
	0x7f, 0x01, 0x68, 0x89, 0xe3, 0xda, 0x38, 0x3b, 0xef, 0xe0, 0xde, 0xdb, 0x59, 0xd6, 0x57, 0xd5,
	0x8f, 0xda, 0x80, 0x38, 0xdd, 0xe3, 0x30, 0xed, 0x7e, 0x32, 0xf9, 0x6c, 0xd6, 0x53, 0x15, 0x8f,
	0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x82, 0x7f, 0xa9, 0x40, 0x04, 0x00, 0x00,
}
