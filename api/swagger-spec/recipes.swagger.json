{
  "swagger": "2.0",
  "info": {
    "title": "recipes.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/recipes": {
      "get": {
        "operationId": "ListRecipes",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1ListRecipesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "filter_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Recipes"
        ]
      },
      "post": {
        "operationId": "CreateRecipe",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Recipe"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Recipe"
            }
          }
        ],
        "tags": [
          "Recipes"
        ]
      }
    },
    "/api/v1/recipes/{id}": {
      "get": {
        "operationId": "GetRecipe",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Recipe"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Recipes"
        ]
      },
      "delete": {
        "operationId": "DeleteRecipe",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Recipes"
        ]
      },
      "patch": {
        "operationId": "UpdateRecipe",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Recipe"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Recipe"
            }
          }
        ],
        "tags": [
          "Recipes"
        ]
      }
    }
  },
  "definitions": {
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    },
    "v1Ingredient": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "measurement": {
          "type": "string"
        }
      }
    },
    "v1ListRecipesResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Recipe"
          }
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Recipe": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ingredients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Ingredient"
          }
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
